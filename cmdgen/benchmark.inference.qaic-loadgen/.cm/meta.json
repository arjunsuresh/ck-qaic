{
  "accu_init": {
    "ck_env": [
      "--env.ML_MODEL_MODEL_NAME=<<<hyphenated_model_name>>>",
      "--env.CK_LOADGEN_DATASET_SIZE=<<<dataset_size>>>",
      "--env.CK_LOADGEN_BUFFER_SIZE=<<<buffer_size>>>",
      "--env.CK_ENV_QAIC_INPUT_SELECT=<<<input_select>>>",
      "--env.CK_ENV_QAIC_DEVICE_IDS=<<<device_ids>>>",
      "--env.CK_ENV_QAIC_QUEUE_LENGTH=<<<queue_length>>>",
      "--env.CK_ENV_QAIC_THREADS_PER_QUEUE=<<<threads_per_queue>>>",
      "--env.CK_ENV_QAIC_ACTIVATION_COUNT=<<<activation_count>>>",
      "--env.CK_ENV_QAIC_MODEL_BATCH_SIZE=<<<batch_size>>>",
      "--env.CK_VERBOSE=<<<verbosity>>>"
    ],
    "deps": [
      "--dep_add_tags.compiler=<<<compiler_tags>>>",
      "--dep_add_tags.python=v3",
      "--dep_add_tags.weights=<<<model_tags,>>>"
    ],
    "record_tags": [
      "mlperf",
      "division.<<<division>>>",
      "platform.<<<sut>>>",
      "inference_engine.<<<inference_engine>>>",
      "inference_engine_version.<<<inference_engine_version>>>",
      "inference_engine_backend.<<<inference_engine_backend>>>",
      "scenario.<<<scenario>>>",
      "mode.<<<mode>>>",
      "buffer_size.<<<buffer_size>>>",
      "workload.<<<hyphenated_model_name>>>",
      "<<<preprocessed_tag>>>",
      "input_select.<<<input_select>>>",
      "queue_length.<<<queue_length>>>",
      "task.<<<task_name>>>",
      "threads_per_queue.<<<threads_per_queue>>>"
    ],
    "record_uoa_parts": [
      "mlperf",
      "<<<division>>>",
      "<<<sut>>>",
      "<<<inference_engine>>>",
      "<<<inference_engine_version>>>",
      "<<<inference_engine_backend>>>",
      "<<<model_readable>>>",
      "<<<scenario>>>",
      "<<<mode>>><<<mode_extension>>>",
      "buffer_size.<<<buffer_size>>>"
    ],
    "shell_preamble": []
  },
  "build_map": {
    "cache": {
      "###": {
        "cache_opt": "###"
      },
      "yes": {
        "cache_opt": "1"
      }
    },
    "cache_dir": {
      "###": {
        "cache_opt": "1",
        "volume_cache": "--volume ###:<<<docker_preprocess_dir>>> "
      },
      "yes": {
        "cache_opt": "1",
        "volume_cache": "--volume <<<cache_dir_default>>>:<<<docker_preprocess_dir>>> "
      }
    },
    "calibration_value": {
      "###": {
        "model_tags": [
          "pcv.\"$(echo ###)\""
        ]
      }
    },
    "compile": {
      "yes": {
        "shell_wrapped_cmd": "<<<ck_compile_program>>>"
      }
    },
    "compliance": {
      "###": {
        "ck_env": "--env.CK_MLPERF_COMPLIANCE_TEST=### --env.CK_LOADGEN_MODE=PerformanceOnly",
        "mode": "performance",
        "mode_extension": "-compliance.###",
        "output_file": "mlperf_log_summary.txt",
        "recommended_buffer_size": "<<<recommended_performance_buffer_size>>>",
        "recommended_repetitions": "1",
        "recommended_verbosity": "0",
        "record_tags": "compliance.###"
      }
    },
    "container": {
      "###": {
        "check_param_container_begin": "<<<check_param_container_begin_def>>>",
        "check_param_container_end": "<<<check_param_container_end_def>>>",
        "docker_run": "time <<<docker_exec_command>>>  ### <<<docker_bash_command>>>",
        "double_quote": "\"",
        "escape_char": "\\"
      }
    },
    "docker": {
      "yes": {
        "docker_run": "time <<<docker_exec_command>>> <<<container>>> <<<docker_bash_command>>>",
        "double_quote": "\"",
        "escape_char": "\\"
      },
      "container_only": {
        "wrapped_ck_benchmark_program": "CONTAINER_ID=<<<container>>> && <<<docker_exec_command>>> $CONTAINER_ID <<<docker_bash_command>>> \"echo -e 'sdk=<<<sdk>>>\nmodel_name=<<<model_name>>>' > <<<docker_config>>>\" && echo ${CONTAINER_ID};"
      }
    },
    "experiment_dir": {
      "###": {
        "volume_experiment": "--volume ###:<<<docker_experiment_dir_default>>> "
      },
      "yes": {
        "volume_experiment": "--volume <<<experiment_dir_default>>>:<<<docker_experiment_dir_default>>> "
      }
    },
    "fan_mode": {
      "###": {
        "ck_env": "--env.CK_FAN_MODE=###",
        "record_tags": "fan_mode.###",
        "record_uoa_parts": "fan_mode.###"
      }
    },
    "max_query_count": {
      "###": {
        "ck_env": "--env.CK_LOADGEN_MAX_QUERY_COUNT=###",
        "record_tags": "max_query_count.###"
      }
    },
    "mode": {
      "accuracy": {
        "ck_env": "--env.CK_LOADGEN_MODE=AccuracyOnly",
        "mode_extension": "-dataset_size.<<<dataset_size>>>-<<<preprocessed_tag>>>",
        "output_file": "accuracy.txt",
        "recommended_buffer_size": "<<<recommended_accuracy_buffer_size>>>",
        "recommended_verbosity": "1"
      },
      "performance": {
        "ck_env": "--env.CK_LOADGEN_MODE=PerformanceOnly",
        "mode_extension": "<<<performance_mode_extension>>>",
        "output_file": "mlperf_log_summary.txt",
        "recommended_buffer_size": "<<<recommended_performance_buffer_size>>>",
        "recommended_verbosity": "0"
      }
    },
    "model_extra_tags": {
      "###": {
        "model_tags": [
          "###"
        ]
      }
    },
    "no_record": {
      "yes": {
        "shell_wrapped_cmd": "<<<wrapped_ck_run_program>>>"
      }
    },
      
    "power": {
      "###": {},
      "yes": {
        "_power_log_helper": "mkdir -p <<<?escape_char>>>\"<<<?escape_char>>>$CK_MLPERF_POWER_CLIENT_LOADGEN_LOGS<<<?escape_char>>>\" && cp <<<?escape_char>>>\"<<<?escape_char>>>$CK_MLPERF_POWER_CLIENT_LOADGEN_LOGS<<<?escape_char>>>\"/../mlperf_log_* <<<?escape_char>>>\"<<<?escape_char>>>$CK_MLPERF_POWER_CLIENT_LOADGEN_LOGS<<<?escape_char>>>\"/",
        "power_command_args": [
          "ck",
          "benchmark",
          "--env.CK_MLPERF_POWER_CLIENT_ADDRESS=<<<power_server_ip>>>",
          "--env.CK_MLPERF_POWER_CLIENT_PORT=<<<power_server_port>>>",
          "--env.CK_MLPERF_POWER_CLIENT_LOADGEN_LOGS=<<<?escape_char>>>\"<<<?escape_char>>>$(ck find program:<<<program_name>>>)<<<?escape_char>>>\"/tmp/loadgen_logs",
          "--env.CK_MLPERF_POWER_CLIENT_WORKLOAD=<<<?escape_char>>>\\\"<<<?escape_char>>>\\\"<<<?escape_char>>>\"<<<?escape_char>>>$_cmd<<<?escape_char>>>\"",
          "--record",
          "--record_repo=local",
          "--repetitions=1",
          "--record_uoa=<<<record_uoa_parts->>>-power.client",
          "--tags=<<<record_tags,>>>,power.client",
          "program:mlperf-power-client"
        ],
        "record_tags_inner": "<<<record_tags,>>>,power.workload",
        "record_uoa": "<<<record_uoa_parts->>>-power.workload",
        "wrapped_ck_benchmark_program": "<<<?docker_run>>> <<<?double_quote>>><<<?check_param_container_begin>>> if [ -n <<<?escape_char>>>\"<<<?escape_char>>>`ck list local:experiment:<<<record_uoa_parts->>>-power.client<<<?escape_char>>>`<<<?escape_char>>>\" ]; then echo 'Experiment <<<record_uoa_parts->>>-power.client exists, skipping' ; else if [ -n <<<?escape_char>>>\"<<<?escape_char>>>`ck list local:experiment:<<<record_uoa>>><<<?escape_char>>>`<<<?escape_char>>>\" ]; then ck rm --force local:experiment:<<<record_uoa>>>; fi; _cmd=<<<?escape_char>>>\"$(cat<<'EOF'\n<<<ck_benchmark_program>>> <<<?escape_char>>>\"@@@{'meta': {'ck_benchmark_program': '<<<ck_benchmark_program>>>'}}<<<?escape_char>>>\" <<<?print_output_file>>> && <<<_power_log_helper>>>\nEOF\n)<<<?escape_char>>>\"; _cmd=<<<?escape_char>>>\"'<<<?escape_char>>>$(echo <<<?escape_char>>>$_cmd | sed 's/\\x27/\\x27<<<?escape_char>>>\\<<<?escape_char>>>\\\\x27\\x27/g')'<<<?escape_char>>>\"; <<<power_command_args >>> ; <<<?check_param_container_end>>> fi<<<?double_quote>>>"
      }
    },
    "power_mode": {
      "###": {
        "ck_env": "--env.CK_POWER_MODE=###",
        "record_tags": "power_mode.###",
        "record_uoa_parts": "power_mode.###"
      }
    },
    "query_count": {
      "###": {
        "ck_env": "--env.CK_LOADGEN_MAX_QUERY_COUNT=### --env.CK_LOADGEN_MIN_QUERY_COUNT=###",
        "record_tags": "query_count.###",
        "record_uoa_parts": "query_count.###"
      }
    },
    "scenario": {
      "multistream": {
        "activation_count": "<<<recommended_multistream_activation_count>>>",
        "batch_size": "<<<recommended_multistream_batch_size>>>",
        "ck_env": "--env.CK_LOADGEN_SCENARIO=MultiStream",
        "input_select": "<<<recommended_input_select>>>",
        "model_suffix": "multistream",
        "performance_mode_extension": "-target_latency.<<<target_latency>>>"
      },
      "offline": {
        "activation_count": "<<<recommended_activation_count>>>",
        "batch_size": "<<<recommended_batch_size>>>",
        "ck_env": "--env.CK_LOADGEN_SCENARIO=Offline --env.CK_LOADGEN_TARGET_QPS=<<<offline_target_qps>>>>",
        "input_select": "<<<recommended_input_select>>>",
        "performance_mode_extension": "",
        "record_tags": "target_qps.<<<offline_target_qps>>>",
        "record_uoa_parts": "target_qps.<<<offline_target_qps>>>"
      },
      "server": {
        "activation_count": "<<<recommended_activation_count>>>",
        "batch_size": "<<<recommended_batch_size>>>",
        "ck_env": "--env.CK_LOADGEN_SCENARIO=Server --env.CK_ENV_QAIC_MAX_WAIT_ABS=<<<max_wait>>> --env.CK_EXTRA_COMPILER_DEPS4=-DSERVER_MODE --env.CK_LOADGEN_TARGET_QPS=<<<server_target_qps>>>",
        "input_select": "0",
        "performance_mode_extension": "",
        "record_tags": "target_qps.<<<server_target_qps>>>",
        "record_uoa_parts": "target_qps.<<<server_target_qps>>>"
      },
      "singlestream": {
        "activation_count": "1",
        "device_ids": "0",
        "batch_size": "1",
        "ck_env": "--env.CK_LOADGEN_SCENARIO=SingleStream",
        "input_select": "<<<recommended_input_select>>>",
        "model_suffix": "singlestream",
        "performance_mode_extension": "-target_latency.<<<target_latency>>>",
        "queue_length": "1",
        "threads_per_queue": "1"
      }
    },
    "sdk": {
      "###": {
        "ck_env": "",
        "deps": "",
        "inference_engine": "qaic",
        "inference_engine_backend": "aic100",
        "inference_engine_version": "v###",
        "library": "qaic-v###-aic100"
      }
    },
    "sut": {
      "###": {
        "compiler_tags": "gcc"
      },
      "aedk_15w": {
        "all_device_ids": "0",
        "ck_benchmark_prefix": "",
        "compiler_tags": "gcc,v8",
        "model_tags": [
          "<<<model>>>.aedk_15w.<<<model_suffix>>>"
        ],
        "recommended_input_select": "1",
        "recommended_queue_length": "8",
        "recommended_threads_per_queue": "8"
      },
      "aedk_20w": {
        "all_device_ids": "0",
        "ck_benchmark_prefix": "",
        "compiler_tags": "gcc,v8",
        "model_tags": [
          "<<<model>>>.aedk_20w.<<<model_suffix>>>"
        ],
        "recommended_input_select": "1",
        "recommended_queue_length": "8",
        "recommended_threads_per_queue": "8"
      },
      "aedk_25w": {
        "all_device_ids": "0",
        "ck_benchmark_prefix": "",
        "compiler_tags": "gcc,v8",
        "model_tags": [
          "<<<model>>>.aedk_20w.<<<model_suffix>>>"
        ],
        "recommended_input_select": "1",
        "recommended_queue_length": "8",
        "recommended_threads_per_queue": "8"
      },
      "g292_z43_q16": {
        "all_device_ids": "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15",
        "ck_benchmark_prefix": "numactl --localalloc",
        "ck_env": [
          "--env.QAIC_BYPASS_PPP=<<<zero_copy>>>",
          "--env.CK_EXTRA_COMPILER_DEPS1=-march=znver2",
          "--env.CK_EXTRA_COMPILER_DEPS2=-DENABLE_ZEN2",
          "--env.CK_EXTRA_COMPILER_DEPS3=<<<g292_default_config>>>"
        ],
        "compiler_tags": "gcc",
        "model_tags": [
          "<<<model>>>.pcie.16nsp.<<<model_suffix>>>"
        ],
        "g292_default_config": "-DG292_CONFA",
        "power_server_ip": "10.222.147.109",
        "power_server_port": "4953",
        "recommended_input_select": "0"
      },
      "r282_z93_q1": {
        "all_device_ids": "0",
        "ck_benchmark_prefix": "numactl --localalloc",
        "ck_env": [
          "--env.QAIC_BYPASS_PPP=<<<zero_copy>>>",
          "--env.CK_EXTRA_COMPILER_DEPS1=-march=znver2",
          "--env.CK_EXTRA_COMPILER_DEPS2=-DENABLE_ZEN2",
          "--env.CK_EXTRA_COMPILER_DEPS3=-DR282"
        ],
        "compiler_tags": "gcc",
        "model_tags": [
          "<<<model>>>.pcie.16nsp.<<<model_suffix>>>"
        ]
      },
      "r282_z93_q5": {
        "all_device_ids": "0,1,2,3,4",
        "ck_benchmark_prefix": "numactl --localalloc",
        "ck_env": [
          "--env.QAIC_BYPASS_PPP=<<<zero_copy>>>",
          "--env.CK_EXTRA_COMPILER_DEPS1=-march=znver2",
          "--env.CK_EXTRA_COMPILER_DEPS2=-DENABLE_ZEN2",
          "--env.CK_EXTRA_COMPILER_DEPS3=-DR282"
        ],
        "compiler_tags": "gcc",
        "model_tags": [
          "<<<model>>>.pcie.16nsp.<<<model_suffix>>>"
        ],
        "power_server_ip": "10.222.154.58",
        "power_server_port": "4956",
        "recommended_input_select": "0"
      },
      "r282_z93_q8": {
        "all_device_ids": "0,1,2,3,4,5,6,7",
        "ck_benchmark_prefix": "numactl --localalloc",
        "ck_env": [
          "--env.QAIC_BYPASS_PPP=<<<zero_copy>>>",
          "--env.CK_EXTRA_COMPILER_DEPS1=-march=znver2",
          "--env.CK_EXTRA_COMPILER_DEPS2=-DENABLE_ZEN2",
          "--env.CK_EXTRA_COMPILER_DEPS3=-DR282"
        ],
        "compiler_tags": "gcc",
        "model_tags": [
          "<<<model>>>.pcie.16nsp.<<<model_suffix>>>"
        ],
        "power_server_ip": "10.222.154.58",
        "power_server_port": "4959",
        "recommended_input_select": "0"
      }
    },
    "target_latency": {
      "###": {
        "ck_env": "--env.CK_LOADGEN_TARGET_LATENCY=###",
        "record_tags": "target_latency.###"
      }
    },
    "target_latency_file": {
      "###": {
        "ck_env": "--env.CK_LOADGEN_TARGET_LATENCY=$CK_LOADGEN_TARGET_LATENCY",
        "record_tags": "target_latency.$CK_LOADGEN_TARGET_LATENCY",
        "shell_preamble": "export CK_LOADGEN_TARGET_LATENCY=$(awk -vX=<<<?escape_char>>>\"<<<sut>>>,<<<library>>>,<<<model_readable>>><<<?escape_char>>>\" 'X==$1{print $2;exit}' < ###); [ <<<?escape_char>>>\"$CK_LOADGEN_TARGET_LATENCY<<<?escape_char>>>\" ] || { echo 'Error: entry <<<sut>>>,<<<library>>>,<<<model_readable>>> not found in ###, exiting'; exit 1; }; ",
        "target_latency": "$CK_LOADGEN_TARGET_LATENCY"
      }
    },
    "verbose": {
      "all": {
        "print_output_file": "<<<print_output_file_cmd>>>",
        "screen_output": ""
      },
      "yes": {
        "print_output_file": "<<<print_output_file_cmd>>>"
      }
    },
    "volume": {
      "###": {
        "volume_opt": "--volume ### "
      },
      "yes": {
        "volume_opt": ""
      }
    }
  },
  "cmd_template": "<<<shell_wrapped_cmd>>>",
  "defaults": {
    "buffer_size": "<<<recommended_buffer_size>>>",
    "cache_opt": "0",
    "check_param_container_begin_def": "sdk_container=\\$(grep sdk <<<docker_config>>> | awk -F '=' '{print \\$2}'); model_name_container=\\$(grep model_name <<<docker_config>>> | awk -F '=' '{print \\$2}' | sed -e 's/-/_/g');  if [[ \\$sdk_container != <<<sdk>>> || \\$model_name_container != <<<model>>> ]]; then echo -e 'Error: The SDK or/and model is not correct for this container.\nContainer: sdk='\\$sdk_container', model='\\$model_name_container.'\nGiven: sdk=<<<sdk>>>, model=<<<model>>>.'; else",
    "check_param_container_end_def": "fi;",
    "ck_benchmark_program": "sleep <<<sleep_before_ck_benchmark_sec>>>; <<<ck_benchmark_prefix>>> ck benchmark <<<run_or_benchmark_common>>> --speed --skip_stat_analysis --process_multi_keys --repetitions=<<<repetitions>>> --record --record_repo=local --record_uoa=<<<record_uoa>>> --tags=<<<record_tags_inner>>>",
    "ck_compile_program": "ck compile program:<<<program_name>>> <<<?deps >>>",
    "ck_run_program": "ck run <<<run_or_benchmark_common>>>",
    "container": "`docker run -dt <<<docker_mode>>><<<docker_user>>><<<docker_group_add>>><<<?volume_opt>>><<<?volume_experiment>>><<<?volume_cache>>> --rm <<<docker_image>>>bash`",
    "device_ids": "<<<all_device_ids>>>",
    "division": "open",
    "docker_bash_command": "/bin/bash -c",
    "docker_config": "/home/krai/container.config",
    "docker_exec_command": "docker exec",
    "docker_experiment_dir_default": "/home/krai/CK_REPOS/local/experiment",
    "docker_group_add": "--group-add <<<shared_group_id>>> ",
    "docker_image": "krai/mlperf.<<<model_name>>>.centos7:<<<sdk>>> ",
    "docker_mode": "--privileged ",
    "docker_user": "--user=krai:kraig ",
    "experiment_dir_default": "${CK_EXPERIMENT_DIR}",
    "hyphenated_model_name": "<<<model_name>>>",
    "ipmitool_mc_info_cmd_part": "sudo ipmitool mc info > <<<logs_dir>>>",
    "ipmitool_fru_print_cmd_part": "sudo ipmitool fru print > <<<logs_dir>>>",
    "ipmitool_sdr_elist_full_cmd_part": "sudo ipmitool sdr elist full > <<<logs_dir>>>",
    "ipmitool_set_fan_raw_part": "ipmitool raw 0x2e 0x10 0x0a 0x3c 0 64 1",
    "logs_dir": "/opt/qti-aic/logs/",
    "max_wait": "50000",
    "model_readable": "<<<model_tags->>>",
    "model_suffix": "offline",
    "post_ipmitool_mc_info_log": "post.ipmitool_mc_info.log",
    "post_ipmitool_sdr_elist_full_log": "post.ipmitool_sdr_elist_full.log",
    "post_ipmitool_mc_info_cmd_def": "echo '<<<ipmitool_mc_info_cmd_part>>><<<post_ipmitool_mc_info_log>>>' >> <<<logs_dir>>>post.config; ",
    "post_ipmitool_sdr_elist_full_cmd_def": "echo '<<<ipmitool_sdr_elist_full_cmd_part>>><<<post_ipmitool_sdr_elist_full_log>>>' >> <<<logs_dir>>>post.config; ",
    "post_ipmitool_set_fan_raw_sdr_elist_cmd_def": "echo '<<<ipmitool_set_fan_raw_part>>> <<<post_fan_raw>>> 0xFF > <<<logs_dir>>><<<post_ipmitool_raw_log>>>' >> <<<logs_dir>>>post.config; echo 'sleep 5' >> <<<logs_dir>>>post.config; <<<post_ipmitool_sdr_elist_full_cmd_def>>>",
    "post_ipmitool_set_fan_raw_cmd_def": "echo '<<<ipmitool_set_fan_raw_part>>> <<<post_fan_raw>>> 0xFF  > <<<logs_dir>>><<<post_ipmitool_raw_log>>>' >> <<<logs_dir>>>post.config; echo 'sleep 5' >> <<<logs_dir>>>post.config;",
    "pre_ipmitool_mc_info_log": "pre.ipmitool_mc_info.log",
    "pre_ipmitool_fru_print_log": "pre.ipmitool_fru_print.log",
    "pre_ipmitool_sdr_elist_full_log": "pre.ipmitool_sdr_elist_full.log",
    "pre_ipmitool_raw_log":"pre_ipmitool_raw.log",
    "post_ipmitool_raw_log":"post_ipmitool_raw.log",
    "pre_ipmitool_mc_info_cmd_def": "echo '<<<ipmitool_mc_info_cmd_part>>><<<pre_ipmitool_mc_info_log>>>' >> <<<logs_dir>>>pre.config; ",
    "pre_ipmitool_fru_print_cmd_def": "echo '<<<ipmitool_fru_print_cmd_part>>><<<pre_ipmitool_fru_print_log>>>' >> <<<logs_dir>>>pre.config; ",
    "pre_ipmitool_sdr_elist_full_cmd_def": "echo '<<<ipmitool_sdr_elist_full_cmd_part>>><<<pre_ipmitool_sdr_elist_full_log>>>' >> <<<logs_dir>>>pre.config; ",
    "pre_ipmitool_set_fan_raw_sdr_elist_cmd_def": "echo '<<<ipmitool_set_fan_raw_part>>> <<<pre_fan_raw>>> 0xFF  > <<<logs_dir>>><<<pre_ipmitool_raw_log>>>' >> <<<logs_dir>>>pre.config; echo 'sleep 5' >> <<<logs_dir>>>pre.config; <<<pre_ipmitool_sdr_elist_full_cmd_def>>>",
    "pre_ipmitool_set_fan_raw_cmd_def": "echo '<<<ipmitool_set_fan_raw_part>>> <<<pre_fan_raw>>> 0xFF  > <<<logs_dir>>><<<pre_ipmitool_raw_log>>>' >> <<<logs_dir>>>pre.config; echo 'sleep 5' >> <<<logs_dir>>>pre.config;",
    "ipmitool_fan_raw_cmd":"",
    "preprocessed_tag": "preprocessed_using.<<<preprocessed_using>>>",
    "preprocessed_using": "opencv",
    "print_container_only": "&& CONTAINER=<<<container>>>",
    "print_output_file_cmd": "&& cat <<<?escape_char>>>`ck find program:<<<program_name>>><<<?escape_char>>>`/tmp/<<<output_file>>>",
    "queue_length": "<<<recommended_queue_length>>>",
    "record_tags_inner": "<<<record_tags,>>>",
    "record_uoa": "<<<record_uoa_parts->>>",
    "repetitions": "1",
    "replace_existing": "",
    "run_or_benchmark_common": "program:<<<program_name>>> <<<screen_output>>> <<<?deps >>> <<<?ck_env >>>",
    "screen_output": "--env.CK_SILENT_MODE=YES --skip_print_timers",
    "separator": ";",
    "server_target_qps": "<<<target_qps>>>",
    "offline_target_qps": "<<<target_qps>>>",
    "shared_group_id": "$(getent group <<<shared_group_name>>> | cut -d: -f3)",
    "shared_group_name": "qaic",
    "shell_wrapped_cmd": "<<<shell_preamble >>> <<<wrapped_ck_benchmark_program>>>",
    "sleep_before_ck_benchmark_sec": "0",
    "threads_per_queue": "<<<recommended_threads_per_queue>>>",
    "verbosity": "<<<recommended_verbosity>>>",
    "watch_sensors_sleep": "1",
    "watch_ipmitool_get_sys_power_sleep": "10",
    "watch_cmd_begin":"echo <<<?escape_char>>><<<?double_quote>>>nohup sh -c 'echo \\\\$\\\\$ >> <<<logs_dir>>>watch.procs; while [ true ]; do ",
    "watch_sensor_cmd_part": "sudo sensors | grep qaic-pci -A6 >> <<<logs_dir>>>",
    "watch_sensor_log": "watch.sensors.log",
    "watch_cmd_separator": "&& echo <<<?escape_char>>><<<?escape_char>>><<<?double_quote>>>^^^<<<?escape_char>>><<<?escape_char>>><<<?double_quote>>> >> <<<logs_dir>>>",
    "watch_sleep": " sleep ",
    "watch_cmd_end": " done' & <<<?escape_char>>><<<?double_quote>>> >> <<<logs_dir>>>watch.config; ",
    "watch_ipmitool_get_sys_power_cmd_part": "sudo ipmitool sensor get SYS_POWER 2>&1 >> <<<logs_dir>>>",
    "watch_ipmitool_get_sys_power_log": "watch.ipmitool_get_sys_power.log",
    "watch_sensors_cmd_def": "<<<watch_cmd_begin>>> <<<watch_sensor_cmd_part>>><<<watch_sensor_log>>> <<<watch_cmd_separator>>><<<watch_sensor_log>>><<<separator>>><<<watch_sleep>>><<<watch_sensors_sleep>>><<<separator>>><<<watch_cmd_end>>>",
    "watch_ipmitool_get_sys_power_cmd_def": "<<<watch_cmd_begin>>><<<watch_ipmitool_get_sys_power_cmd_part>>><<<watch_ipmitool_get_sys_power_log>>> <<<watch_cmd_separator>>><<<watch_ipmitool_get_sys_power_log>>><<<separator>>><<<watch_sleep>>><<<watch_ipmitool_get_sys_power_sleep>>><<<separator>>><<<watch_cmd_end>>>",
    "wrapped_ck_benchmark_program": "<<<?docker_run>>> <<<?double_quote>>><<<?check_param_container_begin>>> if [ -n <<<?escape_char>>>\"<<<?escape_char>>>`ck list local:experiment:<<<record_uoa>>><<<?escape_char>>>`<<<?escape_char>>>\" ] && [ -z <<<?escape_char>>>\"<<<replace_existing>>><<<?escape_char>>>\" ]; then echo 'Experiment <<<record_uoa>>> exists, skipping'; else rm -f /opt/qti-aic/logs/*; <<<?pre_ipmitool_mc_info_cmd>>><<<?pre_ipmitool_fru_print_cmd>>><<<?pre_ipmitool_sdr_elist_full_cmd>>><<<?watch_sensors_cmd>>><<<?watch_ipmitool_get_sys_power_cmd>>><<<?post_ipmitool_mc_info_cmd>>><<<?post_ipmitool_sdr_elist_full_cmd>>><<<?ipmitool_all_cmd>>><<<?watch_cmd>>><<<?pre_ipmitool_set_fan_raw_sdr_elist_cmd>>><<<?post_ipmitool_set_fan_raw_sdr_elist_cmd>>> if [ -n <<<?escape_char>>>\"<<<?escape_char>>>`ck list local:experiment:<<<record_uoa>>><<<?escape_char>>>`<<<?escape_char>>>\" ]; then ck rm --force local:experiment:<<<record_uoa>>>; fi; <<<ck_benchmark_program>>> <<<?escape_char>>>\"@@@{'meta': {'ck_benchmark_program': '<<<ck_benchmark_program>>>'}}<<<?escape_char>>>\" <<<?print_output_file>>> ; <<<?check_param_container_end>>> fi<<<?double_quote>>>",
    "wrapped_ck_run_program": "<<<ck_run_program>>> <<<?print_output_file>>>"
  },
  "groups": {
    "closed": [
      {
        "mode": "accuracy"
      },
      {
        "mode": "performance"
      },
      {
        "compliance": "TEST01"
      },
      {
        "compliance": "TEST04-A"
      },
      {
        "compliance": "TEST04-B"
      },
      {
        "compliance": "TEST05"
      }
    ],
    "datacenter": [
      {
        "scenario": "server"
      },
      {
        "scenario": "offline"
      }
    ],
    "edge": [
      {
        "scenario": "singlestream"
      },
      {
        "scenario": "offline"
      }
    ],
    "open": [
      {
        "mode": "accuracy"
      },
      {
        "mode": "performance"
      }
    ]
  },
  "pre_ipmitool_mc_info": {
     "yes": {
       "pre_ipmitool_mc_info_cmd": "<<<pre_ipmitool_mc_info_cmd_def>>>"
     }
  },
  "pre_ipmitool_fru_print": {
    "yes": {
      "pre_ipmitool_fru_print_cmd": "<<<pre_ipmitool_fru_print_cmd_def>>>"
    }
  },
  "pre_ipmitool_sdr_elist_full": {
    "yes": {
      "pre_ipmitool_sdr_elist_full_cmd": "<<<pre_ipmitool_sdr_elist_full_cmd_def>>>"
    }
  },
  "watch_sensors": {
    "yes": {
      "watch_sensors_cmd": "<<<watch_sensors_cmd_def>>>"
    }
  },
  "watch_ipmitool_get_sys_power": {
    "yes": {
      "watch_ipmitool_get_sys_power_cmd": "<<<watch_ipmitool_get_sys_power_cmd_def>>>"
   }
  },
  "watch": {
    "yes": {
      "watch_cmd": "<<<watch_sensors_cmd_def>>> <<<watch_ipmitool_get_sys_power_cmd_def>>>"
    }
  },
  "post_ipmitool_mc_info": {
    "yes": {
      "post_ipmitool_mc_info_cmd": "<<<post_ipmitool_mc_info_cmd_def>>>"
    }
  },
  "post_ipmitool_sdr_elist_full": {
    "yes": {
      "post_ipmitool_sdr_elist_full_cmd": "<<<post_ipmitool_sdr_elist_full_cmd_def>>>"
    }
  },
  "ipmitool_all": {
    "yes": {
    "ipmitool_all_cmd": "<<<pre_ipmitool_mc_info_cmd_def>>> <<<pre_ipmitool_fru_print_cmd_def>>> <<<?pre_ipmitool_set_fan_raw_cmd_def>>> <<<pre_ipmitool_sdr_elist_full_cmd_def>>> <<<?post_ipmitool_set_fan_raw_cmd_def>>> <<<post_ipmitool_mc_info_cmd_def>>> <<<post_ipmitool_sdr_elist_full_cmd_def>>>"
     }
  },
  "pre_ipmitool_set_fan_raw": {
    "yes":{
      "pre_ipmitool_set_fan_raw_sdr_elist_cmd": "<<<pre_ipmitool_set_fan_raw_sdr_elist_cmd_def>>>"
    }
  },
  "post_ipmitool_set_fan_raw": {
    "yes":{
      "post_ipmitool_set_fan_raw_sdr_elist_cmd": "<<<post_ipmitool_set_fan_raw_sdr_elist_cmd_def>>>"
    }
  }
}
